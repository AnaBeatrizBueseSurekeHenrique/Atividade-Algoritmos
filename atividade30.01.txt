I. Faça o teste de mesa da função selection() para os seguintes vetores:
v1 = {7, 2, 5, 4, 9}
[7, 2, 5, 4, 9]
[2, 7, 5, 4, 9]
[2, 4, 5, 7, 9]

v2 = {7, 5, 5, 3, 9}
[7, 5, 5, 3, 9]
[3, 5, 5, 7, 9]
v3 = {1, 2, 3, 4}
[1, 2, 3, 4]
v4 = {4, 3, 2, 1}
[4, 3, 2, 1]
[1, 3, 2, 4]
[1, 2, 3, 5]

II. O que acontece se trocarmos a condição i < n-1 da linha 4 por i < n?
Haverá uma hora onde i será igual a n - 1, e quando isso acontecer
não será acessado o segundo for, pois sua condição de parada é quando
j = n, e j = i + 1, ou seja, j será igual a n.

III.Ao ordenar v2, o que acontece quando há elementos iguais? É possível saber se a
ordem dos elementos iguais será mantida (o elemento que inicialmente ocupa a
posição 2 continuará a vir antes do elemento que foi inserido na posição 3)?
Graças ao ultimo if, a ordem será mantida.

IV. Quantas trocas são realizadas quando a função selection() é executada para v3?
E para v4?
Nenhuma para v3, duas para v4.

V. Modifique o algoritmo, para que a ordenação seja decrescente.

I. Faça o teste de mesa da função bubble() para os seguintes vetores:
v1 = {7, 2, 5, 4, 9}
[7, 2, 5, 4, 9]
[2, 7, 5, 4, 9]
[2, 5, 7, 4, 9]
[2, 5, 4, 7, 9]
[2, 4, 5, 7, 9]

v2 = {7, 5, 5, 3, 9}
[7, 4, 5, 3, 9]
[4, 7, 5, 3, 9]
[4, 5, 7, 3, 9]
[4, 5, 3, 7, 9]
[4, 3, 5, 7, 9]
[3, 4, 5, 7, 9]

v3 = {1, 2, 3, 4}
[1, 2, 3,
v4 = {4, 3, 2, 1}
[4, 3, 2, 1]
[3, 4, 2, 1]
[3, 2, 4, 1]
[3, 2, 1, 4]
[2, 3, 1, 4]
[2, 1, 3, 4]
[1, 2, 3, 4]
II. Considerando a ordenação por flutuação, quantas comparações e quantas
trocas são realizadas para a ordenação de v2?
5 trocas são realizadas, e 14 comperações
III. Discuta sobre as diferenças na quantidade de comparações e de trocas entre
os métodos de ordenação por seleção e por flutuação?
Na ordenação por flutuação, se altera um numero de posição de um em umaté ele estar na posição correta.
Na ordenação por seleção, se altera os numeros de lugar caso um numero a for maior que b, e a posição de a for menor que a de b.

IV. Implemente uma versão recursiva do Bubble sort.